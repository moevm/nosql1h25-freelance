import os
from pymongo import MongoClient
from bson import ObjectId

MONGO_URI = os.getenv("MONGO_URI", "mongodb://localhost:27017/")
DB_NAME = os.getenv("DB_NAME", "freelance_db")

client = MongoClient(MONGO_URI)
db = client[DB_NAME]

users_collection = db["users"]
contests_collection = db["contests"]
solutions_collection = db["solutions"]
contest_types_collection = db["contest_types"]

def initialize_data():
    if contest_types_collection.count_documents({}) == 0:
        contest_types_collection.insert_many([
            {'name': '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'},
            {'name': '–î–∏–∑–∞–π–Ω'},
            {'name': '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç'},
        ])
    
    if users_collection.count_documents({}) == 0:
        users_collection.insert_many([
            {
                'email': 'admin@rambler.ru',
                'login': 'admin',
                'password': 'admin',
                'role': 3,
                'status': 1,
            },
            {
                'email': 'freelancer@mail.ru',
                'login': 'freelancer',
                'password': 'freelancer',
                'role': 1,
                'status': 1,
            },
            {
                'email': 'employer@yandex.ru',
                'login': 'employer',
                'password': 'employer',
                'role': 2,
                'status': 1,
            },
        ])
    
    employer = users_collection.find_one({'login': 'employer'})
    type_prog = contest_types_collection.find_one({'name': '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'})
    type_design = contest_types_collection.find_one({'name': '–î–∏–∑–∞–π–Ω'})

    if contests_collection.count_documents({}) == 0:
        contests_collection.insert_many([
            {
                'employerId': str(employer['_id']),
                'number': 1,
                'title': 'CodeMasters 2025',
                'annotation': '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ –æ–Ω–ª–∞–π–Ω-—Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
                'description': ('–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –≤—ã ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –±—É–¥—É—â–µ–≥–æ. CodeMasters 2025 ‚Äî —ç—Ç–æ –Ω–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ, –∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –≤—ã–∑–æ–≤–æ–≤, –≥–¥–µ –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç:\n'
                '- üî• –°–ª–æ–º–∞—Ç—å —à–∞–±–ª–æ–Ω—ã: –û—Ç —Ä–µ–≤–µ—Ä—Å-–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥–∞ –∫–≤–∞–Ω—Ç–æ–≤–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –∫–æ—Ç–æ—Ä–∞—è –ø–∏—à–µ—Ç –∫–æ–¥ –ª—É—á—à–µ –≤–∞—Å.\n'
                '- üåç –°–ø–∞—Å—Ç–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –º–∏—Ä: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∏–±–µ—Ä–≥–æ—Ä–æ–¥ –ø–æ—Å–ª–µ –∞—Ç–∞–∫–∏ —Ö–∞–∫–µ—Ä–æ–≤-—Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–µ—Ä–æ–≤ –≤ —Å–∏–º—É–ª—è—Ç–æ—Ä–µ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ AR.\n'
                '- ‚ö° –ü—Ä–æ–∂–∏—Ç—å 72 —á–∞—Å–∞ —Ö–∞–∫–∞—Ç–æ–Ω–∞ –≤ —Ä–µ–∂–∏–º–µ non-stop: –í–∞—à –∫–æ–¥ –±—É–¥–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Ä–æ–±–æ—Ç–∞–º–∏, –∞ –æ—à–∏–±–∫–∏ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ –≥–∏–≥–∞–Ω—Ç—Å–∫–æ–º —ç–∫—Ä–∞–Ω–µ —Å—Ç–∞–¥–∏–æ–Ω–∞.\n\n'
                '### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–Ω–∫—É—Ä—Å–∞:\n'
                '- –¢—Ä–µ—Ö—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ç–±–æ—Ä–∞\n'
                '- –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ 2.5 –º–ª–Ω —Ä—É–±–ª–µ–π\n'
                '- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 4 —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\n'
                '- –§–∏–Ω–∞–ª —Å –∂–∏–≤—ã–º –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º\n'
                '- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç—Ä–µ–∫–∏–Ω–≥ —á–µ—Ä–µ–∑ GitHub\n'
                '- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ AI'),
                'endBy': '2025-05-03T23:59:59.999Z',
                'type': str(type_prog['_id']),
                'status': 1,
                'prizepool': 2500000,
                'files': [],
                'winnerId': None
            },
            {
                'employerId': str(employer['_id']),
                'number': 2,
                'title': 'Pixel Wars 2024: –ë–∏—Ç–≤–∞ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –≤—Å–µ–ª–µ–Ω–Ω—ã—Ö',
                'annotation': '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∫–æ–Ω–∫—É—Ä—Å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞ –∏ –¥–∏–∑–∞–π–Ω–∞',
                'description': (
                    "–°–æ–∑–¥–∞–π—Ç–µ –¥–∏–∑–∞–π–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã! –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –Ω–æ–º–∏–Ω–∞—Ü–∏—è—Ö:\n\n"
                    "- üé® –õ—É—á—à–∏–π –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏-—Ö—É–¥–æ–∂–Ω–∏–∫–∞\n"
                    "- üñåÔ∏è –ê–π–¥–µ–Ω—Ç–∏–∫–∞ –¥–ª—è –∫–æ—Å–º–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞–ø–∞\n"
                    "- üì± UX/UI –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±—É–¥—É—â–µ–≥–æ\n\n"
                    "**–§–∏—à–∫–∏ –∫–æ–Ω–∫—É—Ä—Å–∞:**\n"
                    "- –†–∞–±–æ—Ç—ã –±—É–¥—É—Ç –æ—Ü–µ–Ω–∏–≤–∞—Ç—å 10 –º–ª–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∞—Ä—Ç-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞\n"
                    "- –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –≤—ã—Å—Ç–∞–≤–∫—É –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–π –≥–∞–ª–µ—Ä–µ–µ Metaverse\n"
                    "- –õ—É—á—à–∏–µ —Ä–∞–±–æ—Ç—ã —Å—Ç–∞–Ω—É—Ç NFT-–∫–æ–ª–ª–µ–∫—Ü–∏–µ–π\n\n"
                    "**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**\n"
                    "- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ–º–∞—Ç–∏–∫–µ ¬´–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ + –ò—Å–∫—É—Å—Å—Ç–≤–æ¬ª\n"
                    "- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 100MB\n"
                    "- –§–æ—Ä–º–∞—Ç—ã: PNG, SVG, AI"
                ),
                'endBy': '2025-05-09T23:59:59.999Z',
                'type': str(type_design['_id']),
                'status': 1,
                'prizepool': 1500000,
                'files': [],
                'winnerId': None,
            },
        ])

    freelancer = users_collection.find_one({'login': 'freelancer'})
    contest_prog = contests_collection.find_one({'title': 'CodeMasters 2025'})
    contest_design = contests_collection.find_one({'title': 'Pixel Wars 2024: –ë–∏—Ç–≤–∞ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –≤—Å–µ–ª–µ–Ω–Ω—ã—Ö'})

    if solutions_collection.count_documents({}) == 0:
            solutions_collection.insert_many([
                {
                    'contestId': str(contest_prog['_id']),
                    'freelancerId': str(freelancer['_id']),
                    'number': 1,
                    'description': (
                        "–ú–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–∏–±—Ä–∏–¥–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º, —Å–æ—á–µ—Ç–∞—é—â–∏–π –∫–≤–∞–Ω—Ç–æ–≤—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏. "
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:\n\n"
                        "- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∫–≤–∞–Ω—Ç–æ–≤—ã–µ –≥–µ–π—Ç—ã 4-–≥–æ –ø–æ—Ä—è–¥–∫–∞\n"
                        "- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TensorFlow –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è\n"
                        "- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å GitHub Copilot –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤\n\n"
                        "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 98% accuracy –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ"
                    ),
                    'status': 1,
                    'files': [],
                    'reviews': [
                        {
                            'score': 4.5,
                            'commentary': (
                                "–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –Ω–æ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã:\n"
                                "1. –ù–µ—Ç —é–Ω–∏—Ç-—Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∫–≤–∞–Ω—Ç–æ–≤–æ–π —á–∞—Å—Ç–∏\n"
                                "2. –°–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\n"
                                "3. –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π"
                            ),
                        }
                    ]
                },
                {
                    'contestId': str(contest_design['_id']),
                    'freelancerId': str(freelancer['_id']),
                    'number': 2,
                    'description': (
                        "–ö–æ–Ω—Ü–µ–ø—Ü–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞ –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏-—Ö—É–¥–æ–∂–Ω–∏–∫–∞:\n\n"
                        "- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ñ—Ä–∞–∫—Ç–∞–ª–æ–≤\n"
                        "- –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞: –≥—Ä–∞–¥–∏–µ–Ω—Ç –æ—Ç #003366 –¥–æ #00CCCC\n"
                        "- –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Ç–µ–º–Ω–æ–π/—Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã\n"
                        "- SVG-–∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏"
                    ),
                    'status': 1,
                    'files': [],
                    'reviews': [
                        {
                            'score': 4.9,
                            'commentary': (
                                "–ë–ª–µ—Å—Ç—è—â–µ! –û—Å–æ–±–µ–Ω–Ω–æ –≤–ø–µ—á–∞—Ç–ª–∏–ª–æ:\n"
                                "‚úì –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º\n"
                                "‚úì –ü—Ä–æ–¥—É–º–∞–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è\n"
                                "‚Üí –î–æ–±–∞–≤—å—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –º–æ–Ω–æ—Ö—Ä–æ–º–Ω–æ–π –ø–µ—á–∞—Ç–∏"
                            ),
                        }
                    ]
                }
            ])

initialize_data()